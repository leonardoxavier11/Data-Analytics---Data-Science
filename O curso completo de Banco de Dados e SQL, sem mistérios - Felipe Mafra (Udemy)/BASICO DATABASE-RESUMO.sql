	# COMANDOS IMPORTANTES
SHOW DATABASES; -- PARA VISUALIZAR OS BANCOS
SHOW TABLES
USE banco de dados -- PARA SELECIONAR UM BANCO PARA USO
STATUS -- PARA VISUALIZAR O BANCO EM USO
DESC tabela -- BOA PRÁTICA USAR UM DESC ANTES DE DÁ UM INSERT INTO EM TABELAS
ALTER TABLE tabela CHANGE -- Normalmente usado para mudar o nome da tabela
ALTER TABLE tabela MODIFY -- Normalmente usado para mudar o tipo da tabela
ALTER TABLE tabela ADD -- Adionando uma coluna à tabela
ALTER TABLE tabela DROP COLUMN -- Deletando uma coluna da tabela
DELETE/UPDATE -- BOA PRÁTICA USAR UM COUNT(*), E TALVEZ UM SELECT, ANTES DE DÁ DELETE/UPDATE EM TABELAS E SEMPRE FAZER PELA PK
HAVING -- É UMA BOA COMBINAÇÃO COM COUNT(*) 
ORDER BY -- É UMA BOA COMBINAÇÃO COM COUNT(*)

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO HAVING COUNT(*) > 2; -- EXEMPLO 

	# TIPAGENS IMPORANTES
PRIMARY KEY
FOREIGN KEY
AUTO_INCREMENT
NOT NULL
UNIQUE
CONSTRANGER -- SÃO AS REGRAS, COMO FAZER A PK OU FK

	# DICA DE CONSTRUÇÃO DE QUERY
-- SEMPRE COMECE SUA QUERY COM A PROJEÇÃO DO QUE VOCÊ QUER VER NA TELA (SELECT). LEMBRE, SELECT É PROJEÇÃO NÃO SELEÇÃO
-- IMPORTANTE SEPARAR E IDENTAR A QUERY

-- SELECAO, PROJECAO E JUNCAO
/* PROJECAO -> É TUDO QUE VOCE QUER VER NA TELA */
/* SELECAO -> É UM SUBCONJUNTO DO CONJUNTO TOTAL DE REGISTROS DE UMA TABELA. A CLAUSULA DE SELECAO É O WHERE */
	-- FILTRANDO VALORES NULOS 
	SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE EMAIL IS NULL;
	SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE EMAIL IS NOT NULL;

/* JUNÇÃO */
-- 2 TABELAS
SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO */ 
FROM CLIENTE /* ORIGEM */
	INNER JOIN ENDERECO /*JUNCAO */
	ON IDCLIENTE = ID_CLIENTE
WHERE SEXO = 'F'; /* SELECAO */

-- 3 TABELAS
SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO
FROM CLIENTE 
	INNER JOIN ENDERECO
	ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
	INNER JOIN TELEFONE
	ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;
    
-- OU USANDO PONTEIRAMENTO, O QUE AJUDA A PERFORMACE DO BANCO DE DADOS
SELECT C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO, T.NUMERO
FROM CLIENTE C
	INNER JOIN ENDERECO E 
	ON C.IDCLIENTE = E.ID_CLIENTE
	INNER JOIN TELEFONE T 
	ON C.IDCLIENTE = T.ID_CLIENTE;


